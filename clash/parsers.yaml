parsers: # array
  - reg: ^.*$ 
  # - reg: ^.*$ 匹配所有订阅，或  - url: https://example.com/profile.yaml 指定订阅
  # 下面是删除服务商自带的策略组和规则
    code: |
      module.exports.parse = (raw, { yaml }) => {
        const rawObj = yaml.parse(raw)
        const groups = []
        const rules = []
        return yaml.stringify({ ...rawObj, 'proxy-groups': groups, rules })
      } 
  # 建立自己的配置
    yaml:
      prepend-proxy-groups: # 建立策略组
      - name: 节点选择
        type: select
        proxies:
         - 自动选择
         - 香港
         - 台湾
         - 日本
         - 新加坡
         - 韩国
         - 美国
         - DIRECT
         - REJECT

      - name: 自动选择
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        lazy: true
        tolerance: 50
        proxies:
          - 香港
          - 台湾
          - 日本
          - 新加坡
          - 韩国
          - 美国

      - name: OpenAI
        type: select
        proxies:
          - 香港
          - 台湾
          - 日本
          - 新加坡
          - 韩国
          - 美国

        
      - name: Game
        type: select
        proxies:
          - 香港
          - 台湾
          - 日本
          - 新加坡
          - 韩国
          - 美国

      - name: Discord
        type: select
        proxies:
          - 香港
          - 台湾
          - 日本
          - 新加坡
          - 韩国
          - 美国
        

      - name: Telegram
        type: select
        proxies:
          - 香港
          - 台湾
          - 日本
          - 新加坡
          - 韩国
          - 美国
         
      - name: GlobalMedia
        type: url-test
        url: https://www.youtube.com/
        interval: 120
        lazy: true
        tolerance: 100
        proxies:
          - 香港
          - 台湾
          - 日本
          - 新加坡
          - 韩国
          - 美国

      - name: Apple
        type: select
        proxies:
          - DIRECT
          - 香港
          - 台湾
          - 日本
          - 新加坡
          - 韩国
          - 美国


      - name: Microsoft
        type: select
        proxies:
          - 香港
          - 台湾
          - 日本
          - 新加坡
          - 韩国
          - 美国

      - name: Google
        type: select
        proxies:
          - 香港
          - 台湾
          - 日本
          - 新加坡
          - 韩国
          - 美国


      - name: Global
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 20
        proxies:
          - 香港
          - 台湾
          - 日本
          - 新加坡
          - 韩国
          - 美国

      - name: China
        type: select
        proxies:
          - DIRECT
               
      - name: 香港
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 20
      
      - name: 台湾
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 20
      
      - name: 日本
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 50
      
      - name: 新加坡
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 50
      
      - name: 韩国
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 50

      - name: 美国
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 50
      
      - name: 英国
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 50

      - name: 马来西亚
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 50

      - name: 土耳其
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 50

      - name: 阿根廷
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 50

      - name: 埃及
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 50

      - name: 其他
        type: url-test
        url: http://www.google.com/generate_204
        interval: 300
        tolerance: 50
              
  # 策略组示例
      # - name: 分组名
        # type: select       # 手动选点   
        # url-test     # 自动选择延迟最低的节点
        # fallback     # 节点故障时自动切换下一个
        # laod-balance # 均衡使用分组内的节点
        # url: http://www.gstatic.com/generate_204 # 测试地址 非select类型分组必要
        # interval: 300 # 自动测试间隔时间，单位秒 非select类型分组必要
        # tolerance: 50 # 允许的偏差，节点之间延迟差小于该值不切换 非必要
        # proxies:  
          # - 节点名称或其他分组套娃
          
      commands:
        - proxy-groups.香港.proxies=[]proxyNames|港|香港|🇭🇰|HK|Hong Kong # 向指定策略组添加订阅中的节点名，可使用正则过滤
        - proxy-groups.台湾.proxies=[]proxyNames|台|台湾|新北|彰化|TW|Taiwan
        - proxy-groups.日本.proxies=[]proxyNames|日|日本|🇯🇵|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan
        - proxy-groups.韩国.proxies=[]proxyNames|韩|韓|韩国|🇰🇷|KR|Korea|KOR|首尔
        - proxy-groups.新加坡.proxies=[]proxyNames|新加坡|🇸🇬|坡|狮城|SG|Singapore
        - proxy-groups.英国.proxies=[]proxyNames|英|英国|UK|uk|United Kingdom|Britain|伦敦
        - proxy-groups.马来西亚.proxies=[]proxyNames|my|MY|MYS|mys|Malaysia|大马|吉隆坡
        - proxy-groups.土耳其.proxies=[]proxyNames|Turkey|安卡拉|TR|tr|土耳其
        - proxy-groups.阿根廷.proxies=[]proxyNames|AR|ar|阿根廷|布宜诺斯艾利斯
        - proxy-groups.埃及.proxies=[]proxyNames|EG|eg|埃及|开罗
        - proxy-groups.美国.proxies=[]proxyNames|美|美国|🇺🇸|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States
        - proxy-groups.其他.proxies=[]proxyNames|^[^香日台新韩美]*$ # 这个可以自定义，这个正则的意思是排除节点名字有“香日台新韩美”的节点。
        - mixed-port=7890

       # 为各个策略组添加一个DIRECT，避免机场节点无法匹配上面的正则筛选而导致配置出错。应该有其他办法避免，但是我不会。
        - proxy-groups.香港.proxies.0+DIRECT
        - proxy-groups.台湾.proxies.0+DIRECT
        - proxy-groups.日本.proxies.0+DIRECT
        - proxy-groups.韩国.proxies.0+DIRECT
        - proxy-groups.新加坡.proxies.0+DIRECT
        - proxy-groups.美国.proxies.0+DIRECT
        - proxy-groups.英国.proxies.0+DIRECT
        - proxy-groups.马来西亚.proxies.0+DIRECT
        - proxy-groups.土耳其.proxies.0+DIRECT
        - proxy-groups.阿根廷.proxies.0+DIRECT
        - proxy-groups.埃及.proxies.0+DIRECT
        - proxy-groups.其他.proxies.0+DIRECT

        # - proxy-groups.节点名字.proxies.0+DIRECT # 向指定分组第一个位置添加一个 DIRECT 节点名
        # 一些可能用到的正则过滤节点示例，使分组更细致
        # []proxyNames|a                         # 包含a
        # []proxyNames|^(.*)(a|b)+(.*)$          # 包含a或b
        # []proxyNames|^(?=.*a)(?=.*b).*$        # 包含a和b
        # []proxyNames|^((?!b).)*a((?!b).)*$     # 包含a且不包含b
        # []proxyNames|^((?!b|c).)*a((?!b|c).)*$ # 包含a且不包含b或c
        # 更多正则教程，请看这里：https://deerchao.cn/tutorials/regex/regex.htm#top
        
  # 添加规则
      prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理
        - 'DOMAIN,my.xn--9kqv25eu2o.com,DIRECT'
        - 'RULE-SET,China,DIRECT'
        - 'RULE-SET,Game,Game'
        - 'RULE-SET,Discord,Discord'
        - 'RULE-SET,Telegram,Telegram'
        - 'RULE-SET,OpenAI,OpenAI'
        - 'RULE-SET,GlobalMedia,GlobalMedia'
        - 'RULE-SET,Apple,Apple'
        - 'RULE-SET,Microsoft,Microsoft'
        - 'RULE-SET,Google,Google'
        - 'RULE-SET,Global,Global'
        - 'MATCH,自动选择'




      # 添加规则集
        # DOMAIN-SUFFIX：域名后缀匹配
        # DOMAIN：域名匹配
        # DOMAIN-KEYWORD：域名关键字匹配
        # IP-CIDR：IP段匹配
        # SRC-IP-CIDR：源IP段匹配
        # GEOIP：GEOIP数据库（国家代码）匹配
        # DST-PORT：目标端口匹配
        # SRC-PORT：源端口匹配
        # PROCESS-NAME：源进程名匹配
        # RULE-SET：Rule Provider规则匹配
        # MATCH：全匹配

  # 添加规则集
      mix-rule-providers: 
        China:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/China/China_Classical.yaml"
          path: ./providers/China_Classical.yaml
          interval: 86400
        Game:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game.yaml"
          path: ./providers/Game.yaml
          interval: 86400
        Discord:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Discord/Discord.yaml"
          path: ./providers/Discord.yaml
          interval: 86400
        Telegram:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml"
          path: ./providers/Telegram.yaml
          interval: 86400
        OpenAI:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml"
          path: ./providers/OpenAI.yaml
          interval: 86400
        GlobalMedia:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml"
          path: ./providers/GlobalMedia_Classical.yaml
          interval: 86400
        Apple:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical.yaml"
          path: ./providers/Apple_Classical.yaml
          interval: 86400
        Microsoft:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml"
          path: ./providers/Microsoft.yaml
          interval: 86400
        Google:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.yaml"
          path: ./providers/Google.yaml
          interval: 86400
        Global:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Global/Global_Classical.yaml"
          path: ./providers/Global_Classical.yaml
          interval: 86400  
